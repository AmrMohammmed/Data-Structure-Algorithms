#include<iostream>
using namespace std;

int partition(int arr[],int first,int last)
{
	int pivot;
	int index,smallIndex;

	swap(arr[first], arr[((first + last) / 2)]);//consider the pivot as the mid element 
	
	pivot = arr[first];
	smallIndex = first;

	for(index = first +1; index <= last; index++)
	{
		if(arr[index] < pivot)
		{
			smallIndex++;
			swap(arr[smallIndex], arr[index]);
		}
	}
	swap(arr[first], arr[smallIndex]);

	return smallIndex;
}

void quickSort(int arr[],int first,int last)
{
	int pivotLocation;

	if(first<last)
	{
		pivotLocation = partition(arr, first, last);
		quickSort(arr, first, pivotLocation - 1);
		quickSort(arr, pivotLocation + 1, last);
	}

}

void print(int arr[], int n)
{
	for (int i = 0; i < n; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl;
}

int main()
{

	int arr[1000];
	int length;
	int temp;

	cin >> length;

	for (int i = 0; i < length; i++)
	{
		cin >> arr[i];
	}
	quickSort(arr, 0, length - 1);
	print(arr, length);

	return 0;

}
